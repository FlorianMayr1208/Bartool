openapi: 3.0.0
info:
  title: Bar Management API
  version: '0.1'
paths:
  /ingredients:
    get:
      summary: List ingredients
      parameters:
        - in: query
          name: skip
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
    post:
      summary: Create ingredient
  /recipes/search:
    get:
      summary: Search recipes from CocktailDB
      parameters:
        - in: query
          name: q
          schema:
            type: string
  /search:
    get:
      summary: Search local recipes
      parameters:
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: tag
          schema:
            type: string
        - in: query
          name: category
          schema:
            type: string
        - in: query
          name: alcoholic
          schema:
            type: string
        - in: query
          name: iba
          schema:
            type: string
        - in: query
          name: available_only
          schema:
            type: boolean
        - in: query
          name: order_missing
          schema:
            type: boolean
        - in: query
          name: skip
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
  /suggestions:
    get:
      summary: Suggest random recipes prioritising available ones
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: max_missing
          schema:
            type: integer
        - in: query
          name: macros
          schema:
            type: array
            items:
              type: string
        - in: query
          name: macro_mode
          schema:
            type: string
  /suggestions/by-ingredients:
    get:
      summary: Suggest recipes filtered by ingredients
      parameters:
        - in: query
          name: ingredients
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: mode
          schema:
            type: string
        - in: query
          name: macros
          schema:
            type: array
            items:
              type: string
        - in: query
          name: macro_mode
          schema:
            type: string
        - in: query
          name: max_missing
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
  /recipes:
    get:
      summary: List recipes
      parameters:
        - in: query
          name: skip
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
    post:
      summary: Add recipe from CocktailDB
  /recipes/{recipe_id}:
    get:
      summary: Get recipe with inventory
      parameters:
        - in: path
          name: recipe_id
          required: true
          schema:
            type: integer
    delete:
      summary: Delete recipe
      parameters:
        - in: path
          name: recipe_id
          required: true
          schema:
            type: integer
  /inventory/{id}:
    get:
      summary: Get inventory item
      parameters:
        - in: path
          name: id
          required: true
      schema:
        type: integer
  /synonyms:
    get:
      summary: List synonyms
    post:
      summary: Create synonym
  /synonyms/import:
    post:
      summary: Import synonyms from JSON
  /unit-synonyms:
    get:
      summary: List unit synonyms
    post:
      summary: Create unit synonym
  /unit-synonyms/import:
    post:
      summary: Import unit synonyms from JSON
  /synonyms/{alias}:
    delete:
      summary: Delete synonym
  /unit-synonyms/{alias}:
    delete:
      summary: Delete unit synonym
    patch:
      summary: Update inventory item
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
  /barcode/{ean}:
    get:
      summary: Lookup product information from Open Food Facts
      parameters:
        - in: path
          name: ean
          required: true
          schema:
            type: string
  /inventory/aggregate-synonyms:
    post:
      summary: Aggregate inventory items using current synonyms
  /shopping-list:
    get:
      summary: List shopping list items
    delete:
      summary: Clear shopping list
    post:
      summary: Add missing ingredients from recipe
      parameters:
        - in: query
          name: recipe_id
          schema:
            type: integer
  /shopping-list/from-recipe/{recipe_id}:
    post:
      summary: Add missing ingredients of recipe to shopping list
      parameters:
        - in: path
          name: recipe_id
          required: true
          schema:
            type: integer
  /db/export:
    get:
      summary: Download SQLite database file
  /db/import:
    post:
      summary: Upload SQLite database file
  /tags:
    get:
      summary: List tags
      parameters:
        - in: query
          name: skip
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
  /categories:
    get:
      summary: List categories
      parameters:
        - in: query
          name: skip
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
  /macros:
    get:
      summary: List flavour macros
